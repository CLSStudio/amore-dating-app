import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

// Â∞éÂÖ•ÂçáÁ¥öÂæåÁöÑÂäüËÉΩ
import 'lib/features/chat/real_time_chat_page.dart';
import 'lib/features/matches/match_celebration_page.dart';
import 'lib/core/theme/app_design_system.dart';

void main() {
  runApp(const ProviderScope(child: EnhancedChatSystemDemo()));
}

class EnhancedChatSystemDemo extends StatelessWidget {
  const EnhancedChatSystemDemo({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Enhanced Chat System Demo',
      debugShowCheckedModeBanner: false,
      theme: AppTheme.lightTheme,
      home: const ChatSystemTestPage(),
    );
  }
}

class ChatSystemTestPage extends StatelessWidget {
  const ChatSystemTestPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.background,
      appBar: AppBar(
        title: const Text(
          'üí¨ Enhanced Chat System',
          style: TextStyle(
            fontSize: 20,
            fontWeight: FontWeight.bold,
            color: AppColors.primary,
          ),
        ),
        backgroundColor: AppColors.surface,
        elevation: 0,
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // ÂçáÁ¥öÊëòË¶ÅÂç°Áâá
            _buildUpgradeSummaryCard(),
            const SizedBox(height: 20),
            
            // Ê∏¨Ë©¶ÂäüËÉΩÂçÄ
            _buildSectionTitle('üöÄ ËÅäÂ§©Á≥ªÁµ±ÂäüËÉΩÊ∏¨Ë©¶'),
            _buildTestCard(
              'ÈÖçÂ∞çÊÖ∂Á•ù ‚Üí ËÅäÂ§©ÊµÅÁ®ã',
              'Match Celebration to Chat Flow',
              'ÂÆåÊï¥ÁöÑÈÖçÂ∞çÂà∞ËÅäÂ§©ÈÅéÊ∏°È´îÈ©óÔºåÂåÖÂê´MBTIÂÖºÂÆπÊÄß‰ø°ÊÅØ',
              Icons.celebration,
              () => Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => const MatchCelebrationPage(
                    matchedUserName: 'Â∞èÈõÖ',
                    matchedUserImage: 'https://picsum.photos/400/400?random=1',
                    currentUserImage: 'https://picsum.photos/400/400?random=2',
                    compatibilityScore: 92,
                  ),
                ),
              ),
            ),
            _buildTestCard(
              'Áõ¥Êé•ËÅäÂ§©È´îÈ©ó',
              'Direct Chat Experience',
              'Áèæ‰ª£ÂåñËÅäÂ§©ÁïåÈù¢ÔºåMBTI‰ø°ÊÅØÔºåAIÁ†¥ÂÜ∞Ë©±È°å',
              Icons.chat_bubble_rounded,
              () => Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => RealTimeChatPage(
                    chatId: 'demo_chat_${DateTime.now().millisecondsSinceEpoch}',
                    otherUserId: 'demo_user',
                    otherUserName: 'Â∞èÈõÖ',
                    otherUserPhoto: 'https://picsum.photos/400/400?random=1',
                    compatibilityInfo: UserCompatibilityInfo(
                      mbtiType: 'ENFP',
                      compatibilityScore: 92,
                      commonInterests: ['ÊîùÂΩ±', 'ÊóÖË°å', 'ÂíñÂï°', 'Èü≥Ê®Ç'],
                      matchReason: '‰Ω†ÂÄëÈÉΩÊòØÂ§ñÂêë‰∏îÂØåÊúâÂâµÈÄ†ÂäõÁöÑ‰∫∫ÔºåÊúâËëóÁõ∏‰ººÁöÑÂÉπÂÄºËßÄÂíåËààË∂£ÊÑõÂ•Ω',
                    ),
                  ),
                ),
              ),
            ),
            _buildTestCard(
              '‰∏çÂêåÂÖºÂÆπÊÄßËÅäÂ§©',
              'Different Compatibility Chat',
              'Ê∏¨Ë©¶‰∏çÂêåÂÖºÂÆπÊÄßÂàÜÊï∏ÁöÑËÅäÂ§©È´îÈ©ó',
              Icons.psychology,
              () => Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => RealTimeChatPage(
                    chatId: 'demo_chat_2_${DateTime.now().millisecondsSinceEpoch}',
                    otherUserId: 'demo_user_2',
                    otherUserName: 'ÂøóÊòé',
                    otherUserPhoto: 'https://picsum.photos/400/400?random=3',
                    compatibilityInfo: UserCompatibilityInfo(
                      mbtiType: 'INTJ',
                      compatibilityScore: 75,
                      commonInterests: ['ÁßëÊäÄ', 'Èñ±ËÆÄ', 'ÈõªÂΩ±'],
                      matchReason: '‰Ω†ÂÄëÂú®ÊÄùÁ∂≠ÊñπÂºè‰∏äÊúâÂæàÂ•ΩÁöÑ‰∫íË£úÊÄß',
                    ),
                  ),
                ),
              ),
            ),
            
            const SizedBox(height: 20),
            
            // ÂäüËÉΩ‰∫ÆÈªûË™™Êòé
            _buildFeatureHighlights(),
          ],
        ),
      ),
    );
  }

  Widget _buildUpgradeSummaryCard() {
    return Container(
      padding: const EdgeInsets.all(24),
      decoration: BoxDecoration(
        gradient: AppColors.primaryGradient,
        borderRadius: BorderRadius.circular(20),
        boxShadow: AppShadows.floating,
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Container(
                padding: const EdgeInsets.all(12),
                decoration: BoxDecoration(
                  color: Colors.white.withOpacity(0.2),
                  borderRadius: BorderRadius.circular(12),
                ),
                child: const Icon(
                  Icons.upgrade,
                  color: Colors.white,
                  size: 24,
                ),
              ),
              const SizedBox(width: 16),
              const Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      'ËÅäÂ§©Á≥ªÁµ±ÂÖ®Èù¢ÂçáÁ¥ö',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    Text(
                      'Áµ±‰∏ÄUI/UXË≥™ÈáèÊ®ôÊ∫ñÂ∑≤ÂØ¶Áèæ',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 14,
                        fontWeight: FontWeight.w500,
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
          const SizedBox(height: 20),
          Row(
            children: [
              _buildUpgradeStatItem('‚ú®', 'Áèæ‰ª£ÂåñË®≠Ë®à'),
              _buildUpgradeStatItem('üß†', 'MBTIÊï¥Âêà'),
              _buildUpgradeStatItem('ü§ñ', 'AIÁ†¥ÂÜ∞Ë©±È°å'),
              _buildUpgradeStatItem('üîÑ', 'ÊµÅÊö¢ÈÅéÊ∏°'),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildUpgradeStatItem(String icon, String label) {
    return Expanded(
      child: Column(
        children: [
          Text(
            icon,
            style: const TextStyle(fontSize: 24),
          ),
          const SizedBox(height: 4),
          Text(
            label,
            style: const TextStyle(
              color: Colors.white,
              fontSize: 12,
              fontWeight: FontWeight.w500,
            ),
            textAlign: TextAlign.center,
          ),
        ],
      ),
    );
  }

  Widget _buildSectionTitle(String title) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 12),
      child: Text(
        title,
        style: const TextStyle(
          fontSize: 18,
          fontWeight: FontWeight.bold,
          color: AppColors.textPrimary,
        ),
      ),
    );
  }

  Widget _buildTestCard(
    String title,
    String subtitle,
    String description,
    IconData icon,
    VoidCallback onTap,
  ) {
    return Container(
      margin: const EdgeInsets.only(bottom: 12),
      decoration: BoxDecoration(
        color: AppColors.surface,
        borderRadius: BorderRadius.circular(16),
        boxShadow: AppShadows.card,
        border: Border.all(
          color: AppColors.textTertiary.withOpacity(0.1),
        ),
      ),
      child: ListTile(
        contentPadding: const EdgeInsets.all(20),
        leading: Container(
          padding: const EdgeInsets.all(12),
          decoration: BoxDecoration(
            gradient: AppColors.primaryGradient,
            borderRadius: BorderRadius.circular(12),
            boxShadow: AppShadows.small,
          ),
          child: Icon(
            icon,
            color: Colors.white,
            size: 24,
          ),
        ),
        title: Text(
          title,
          style: const TextStyle(
            fontSize: 16,
            fontWeight: FontWeight.w600,
            color: AppColors.textPrimary,
          ),
        ),
        subtitle: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const SizedBox(height: 4),
            Text(
              subtitle,
              style: const TextStyle(
                fontSize: 14,
                color: AppColors.primary,
                fontWeight: FontWeight.w500,
              ),
            ),
            const SizedBox(height: 8),
            Text(
              description,
              style: const TextStyle(
                fontSize: 13,
                color: AppColors.textSecondary,
              ),
            ),
          ],
        ),
        trailing: Container(
          padding: const EdgeInsets.all(8),
          decoration: BoxDecoration(
            color: AppColors.primary,
            borderRadius: BorderRadius.circular(8),
          ),
          child: const Icon(
            Icons.arrow_forward,
            color: Colors.white,
            size: 20,
          ),
        ),
        onTap: onTap,
      ),
    );
  }

  Widget _buildFeatureHighlights() {
    return Container(
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.blue.shade50,
        borderRadius: BorderRadius.circular(16),
        border: Border.all(
          color: Colors.blue.shade200,
        ),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Icon(
                Icons.star,
                color: Colors.blue.shade600,
                size: 24,
              ),
              const SizedBox(width: 12),
              Text(
                'ËÅäÂ§©Á≥ªÁµ±ÂäüËÉΩ‰∫ÆÈªû',
                style: TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Colors.blue.shade800,
                ),
              ),
            ],
          ),
          const SizedBox(height: 16),
          _buildFeatureItem('üé® Áèæ‰ª£ÂåñË®≠Ë®à', 'Áµ±‰∏Ä‰ΩøÁî®AppDesignSystemË®≠Ë®àË™ûË®Ä'),
          _buildFeatureItem('üí¨ Êô∫ËÉΩÊ∞£Ê≥°', 'Êº∏ËÆäËâ≤ËÅäÂ§©Ê∞£Ê≥°ÔºåÊõ¥Â•ΩÁöÑË¶ñË¶∫Â±§Ê¨°'),
          _buildFeatureItem('üß† MBTIÊï¥Âêà', 'ËÅäÂ§©Ê®ôÈ°åÊ¨ÑÈ°ØÁ§∫ÂÖºÂÆπÊÄßÂàÜÊï∏ÂíåÈ°ûÂûã'),
          _buildFeatureItem('ü§ñ AIÁ†¥ÂÜ∞Ë©±È°å', 'ÂÄãÊÄßÂåñÁ†¥ÂÜ∞Ë©±È°åÂª∫Ë≠∞Èù¢Êùø'),
          _buildFeatureItem('üì± Ëß∏Ë¶∫ÂèçÈ•ã', 'ÊâÄÊúâ‰∫§‰∫íÈÉΩÊúâÈÅ©Áï∂ÁöÑËß∏Ë¶∫ÂèçÈ•ã'),
          _buildFeatureItem('üîÑ ÊµÅÊö¢ÈÅéÊ∏°', 'ÂæûÈÖçÂ∞çÊÖ∂Á•ùÂà∞ËÅäÂ§©ÁöÑÁÑ°Á∏´ÈäúÊé•'),
          _buildFeatureItem('‚ö° ÊÄßËÉΩÂÑ™Âåñ', '‰ΩøÁî®AnimatedBuilderÈÅøÂÖç‰∏çÂøÖË¶ÅÈáçÂª∫'),
          _buildFeatureItem('üéØ Áî®Êà∂È´îÈ©ó', 'Á¨¶ÂêàGen ZÂíåÂ∞àÊ•≠‰∫∫Â£´ÁöÑ‰ΩøÁî®ÁøíÊÖ£'),
        ],
      ),
    );
  }

  Widget _buildFeatureItem(String title, String description) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 12),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: TextStyle(
              fontSize: 14,
              fontWeight: FontWeight.w600,
              color: Colors.blue.shade700,
            ),
          ),
          const SizedBox(width: 8),
          Expanded(
            child: Text(
              description,
              style: const TextStyle(
                fontSize: 14,
                color: AppColors.textSecondary,
              ),
            ),
          ),
        ],
      ),
    );
  }
} 